import java.util.ArrayList;
import java.util.Scanner;

public class Task5 {

    // Course class to hold course details
    static class Course {
        String courseCode;
        String courseTitle;
        int capacity;
        int enrolledStudents;

        public Course(String courseCode, String courseTitle, int capacity) {
            this.courseCode = courseCode;
            this.courseTitle = courseTitle;
            this.capacity = capacity;
            this.enrolledStudents = 0;
        }

        public boolean isAvailable() {
            return enrolledStudents < capacity;
        }

        public void enrollStudent() {
            if (isAvailable()) {
                enrolledStudents++;
            } else {
                System.out.println("Course is full.");
            }
        }

        public void removeStudent() {
            if (enrolledStudents > 0) {
                enrolledStudents--;
            } else {
                System.out.println("No students to remove.");
            }
        }

        @Override
        public String toString() {
            return "Course Code: " + courseCode + "\n" +
                   "Course Title: " + courseTitle + "\n" +
                   "Capacity: " + capacity + "\n" +
                   "Enrolled Students: " + enrolledStudents;
        }
    }

    // Student class to hold student details
    static class Student {
        String studentID;
        String studentName;
        ArrayList<Course> registeredCourses = new ArrayList<>();

        public Student(String studentID, String studentName) {
            this.studentID = studentID;
            this.studentName = studentName;
        }

        public void registerCourse(Course course) {
            if (course.isAvailable()) {
                course.enrollStudent();
                registeredCourses.add(course);
                System.out.println(studentName + " registered for " + course.courseTitle);
            } else {
                System.out.println("Course is full.");
            }
        }

        public void dropCourse(Course course) {
            if (registeredCourses.contains(course)) {
                course.removeStudent();
                registeredCourses.remove(course);
                System.out.println(studentName + " dropped the course " + course.courseTitle);
            } else {
                System.out.println("Course not found in registered courses.");
            }
        }
    }

    // Main method
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ArrayList<Course> courses = new ArrayList<>();
        ArrayList<Student> students = new ArrayList<>();

        // Adding courses
        System.out.println("Enter number of courses to add:");
        int numCourses = scanner.nextInt();
        scanner.nextLine();  // Consume newline
        for (int i = 0; i < numCourses; i++) {
            System.out.println("Enter details for Course " + (i + 1));
            System.out.print("Enter Course Code: ");
            String code = scanner.nextLine();
            System.out.print("Enter Course Title: ");
            String title = scanner.nextLine();
            System.out.print("Enter Course Capacity: ");
            int capacity = scanner.nextInt();
            scanner.nextLine();  // Consume newline

            courses.add(new Course(code, title, capacity));
        }

        // Adding students
        System.out.println("Enter number of students to add:");
        int numStudents = scanner.nextInt();
        scanner.nextLine();  // Consume newline
        for (int i = 0; i < numStudents; i++) {
            System.out.println("Enter details for Student " + (i + 1));
            System.out.print("Enter Student ID: ");
            String id = scanner.nextLine();
            System.out.print("Enter Student Name: ");
            String name = scanner.nextLine();
            students.add(new Student(id, name));
        }

        // Registering and dropping courses
        while (true) {
            System.out.println("\n1. Register for a course");
            System.out.println("2. Drop a course");
            System.out.println("3. View available courses");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline

            if (choice == 1) {
                System.out.print("Enter Student ID to register: ");
                String studentID = scanner.nextLine();
                Student student = findStudent(students, studentID);
                if (student != null) {
                    viewAvailableCourses(courses);
                    System.out.print("Enter Course Code to register: ");
                    String courseCode = scanner.nextLine();
                    Course course = findCourse(courses, courseCode);
                    if (course != null) {
                        student.registerCourse(course);
                    } else {
                        System.out.println("Course not found.");
                    }
                } else {
                    System.out.println("Student not found.");
                }
            } else if (choice == 2) {
                System.out.print("Enter Student ID to drop course: ");
                String studentID = scanner.nextLine();
                Student student = findStudent(students, studentID);
                if (student != null) {
                    System.out.print("Enter Course Code to drop: ");
                    String courseCode = scanner.nextLine();
                    Course course = findCourse(student.registeredCourses, courseCode);
                    if (course != null) {
                        student.dropCourse(course);
                    } else {
                        System.out.println("Course not found in registered courses.");
                    }
                } else {
                    System.out.println("Student not found.");
                }
            } else if (choice == 3) {
                viewAvailableCourses(courses);
            } else if (choice == 4) {
                break;
            } else {
                System.out.println("Invalid choice, please try again.");
            }
        }

        scanner.close();
    }

    // Method to find a student by ID
    private static Student findStudent(ArrayList<Student> students, String studentID) {
        for (Student student : students) {
            if (student.studentID.equals(studentID)) {
                return student;
            }
        }
        return null;
    }

    // Method to find a course by code
    private static Course findCourse(ArrayList<Course> courses, String courseCode) {
        for (Course course : courses) {
            if (course.courseCode.equals(courseCode)) {
                return course;
            }
        }
        return null;
    }

    // Method to view available courses
    private static void viewAvailableCourses(ArrayList<Course> courses) {
        System.out.println("\nAvailable Courses:");
        for (Course course : courses) {
            if (course.isAvailable()) {
                System.out.println(course);
                System.out.println("------------------------------");
            }
        }
    }
}
